class Book:
    def __init__(self, title, author, isbn, copies):
        self.title = title
        self.author = author
        self.isbn = isbn
        self.copies = copies

class Library:
    def __init__(self):
        self.books = []

    def add_book(self, book):
        self.books.append(book)

    def remove_book(self, book):
        self.books.remove(book)

    def search_book(self, title):
        for book in self.books:
            if book.title == title:
                return book
        return None

    def display_books(self):
        for book in self.books:
            print(f"Title: {book.title}, Author: {book.author}, ISBN: {book.isbn}, Copies: {book.copies}")

class User:
    def __init__(self, name):
        self.name = name

class LMS:
    def __init__(self):
        self.library = Library()
        self.users = []

    def add_user(self, user):
        self.users.append(user)

    def lend_book(self, user, book_title):
        book = self.library.search_book(book_title)
        if book:
            if book.copies > 0:
                book.copies -= 1
                print(f"{user.name} has borrowed {book.title}")
            else:
                print("Sorry, this book is currently unavailable.")
        else:
            print("Book not found in the library.")

    def return_book(self, user, book_title):
        book = self.library.search_book(book_title)
        if book:
            book.copies += 1
            print(f"{user.name} has returned {book.title}")
        else:
            print("Book not found in the library.")

# Example usage:
if __name__ == "__main__":
    lms = LMS()
    lms.add_user(User("Alice"))
    lms.add_user(User("Bob"))

    lms.library.add_book(Book("1984", "George Orwell", "978-0451524935", 2))
    lms.library.add_book(Book("To Kill a Mockingbird", "Harper Lee", "978-0061120084", 1))
    lms.library.add_book(Book("The Great Gatsby", "F. Scott Fitzgerald", "978-0743273565", 3))

    lms.lend_book(lms.users[0], "1984")
    lms.lend_book(lms.users[1], "The Great Gatsby")

    lms.return_book(lms.users[0], "1984")

    lms.library.display_books()
